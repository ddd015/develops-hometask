---
 - hosts: localhost
   become: yes
   tasks:
      - name: Install lxc pckages and python3-lxc
        apt:
          pkg:
          - mc
          - python3-pip
          - lxc
          - lxc-dev
          - lxc-templates
          - python3-lxc 
          state: latest
          update_cache: true
#      - name: SSH remove question for ssh connect 
#        lineinfile:
#          path: /etc/ssh/sshd_config
#          insertbefore: 'EOF'
#          line: StrictHostKeyChecking no
      - name: Restart SSH
        service:
          name: sshd
          state: restarted
      - name: Install ansible-galaxy collection 
        shell: |
          sudo ansible-galaxy collection install community.general
          sudo ansible-galaxy collection install community.mysql
          sudo ansible-galaxy collection install community.crypto

      - name: add conf files for lxc net    
        copy:
          dest: /etc/default/lxc-net
          content: |
            USE_LXC_BRIDGE="true"
            LXC_BRIDGE="lxcbr0"
            LXC_ADDR="10.0.3.1"
            LXC_NETMASK="255.255.255.0"
            LXC_NETWORK="10.0.3.0/24"
            LXC_DHCP_RANGE="10.0.3.100,10.0.3.254"
            LXC_DHCP_MAX="253"
            LXC_DHCP_CONFILE="/vagrant/iplxc.conf"
            LXC_DOMAIN=""
      - name: add conf file  for lxc container
        copy:
          dest: /etc/lxc/default.conf
          content: |
            lxc.net.0.type = veth
            lxc.net.0.link = lxcbr0
            lxc.net.0.flags = up
            lxc.apparmor.profile = unconfined
            lxc.apparmor.allow_nesting = 1
            lxc.start.auto = 1
      - name: Restart lxc
        shell: sudo systemctl restart lxc-net
      - name: create container c1
        lxc_container:
          name: c1
          container_log: true
          template: download
          template_options: --dist ubuntu --release focal --arch amd64 --no-validate
          state: stopped
      - name: create container c2
        lxc_container:
          name: c2
          container_log: true
          template: download
          template_options: --dist ubuntu --release focal --arch amd64 --no-validate
          state: stopped
      - name: Start c1
        lxc_container:
          name: c1
          state: started
          container_command: |
            sleep 20
            apt update
            apt install openssh-server -y            
            mkdir /root/.ssh/
            touch /root/.ssh/authorized_keys
      - name: Start c2
        lxc_container:
          name: c2
          state: started
          container_command: |
            sleep 20
            apt update
            apt install openssh-server -y
            mkdir /root/.ssh/
            touch /root/.ssh/authorized_keys
            apt install software-properties-common -y
#            sudo add-apt-repository ppa:ondrej/php
      - name: Add repository for PHP 8.0
        apt_repository:
          repo: "ppa:ondrej/php"
          state: present
      - name: SSH PermitRootLogin on c1
        lineinfile:
          path: /var/lib/lxc/c1/rootfs/etc/ssh/sshd_config
          regexp: '^PermitRootLogin'
          insertbefore: '^PermitRootLogin'
          line: PermitRootLogin yes
      - name: SSH PermitRootLogin on c2
        lineinfile:
          path: /var/lib/lxc/c2/rootfs/etc/ssh/sshd_config
          regexp: '^PermitRootLogin'
          insertbefore: '^PermitRootLogin'
          line: PermitRootLogin yes
      - name: Restart SSH on LXC c1
        lxc_container:
          name: c1
          state: started
          container_command: systemctl restart sshd
      - name: Restart SSH on LXC c2
        lxc_container:
          name: c2
          state: started
          container_command: systemctl restart sshd  
      - name: Create ssh key
        openssh_keypair:
          path: /home/vagrant/.ssh/id_ssh_rsa
          force: true
      - name: Copy ssh public key
        copy:
          src: /home/vagrant/.ssh/id_ssh_rsa.pub
          dest: "{{ item }}"
        loop:
         - /var/lib/lxc/c1/rootfs/root/.ssh/authorized_keys
         - /var/lib/lxc/c2/rootfs/root/.ssh/authorized_keys
      - name: add iptables
        shell: |
          sudo iptables -t nat -A PREROUTING -p tcp -i enp0s3 --dport 3306 -j DNAT --to-destination 10.0.3.10:3306
          sudo iptables -t nat -A PREROUTING -p tcp -i enp0s3 --dport 22 -j DNAT --to-destination 10.0.3.10:22
          sudo iptables -t nat -A PREROUTING -p tcp -i enp0s3 --dport 22 -j DNAT --to-destination 10.0.3.11:22

 - hosts: db
   become: yes
   vars:
    db_name: drupal
    db_user: drupal
    db_password: drupal
   tasks:
      - name: Install MySQL
        apt:
          pkg:
          - mysql-server
          - python3-pymysql
          state: latest
      - name: update mysql root password for all root accounts  
        mysql_user: 
          login_unix_socket: /var/run/mysqld/mysqld.sock 
          name: root  
          host: "{{ item }}"  
          password: "{{ db_password }}"  
          login_user: root  
          login_password: "{{ db_password }}"  
          check_implicit_admin: yes  
          priv: "*.*:ALL,GRANT"  
          host_all: yes
        with_items:  
        - "{{ ansible_hostname }}"  
        - 127.0.0.1  
        - ::1  
        - localhost
      - name: Create db
        mysql_db:
          login_unix_socket: /var/run/mysqld/mysqld.sock
          name: "{{ db_name }}"
          state: present
          login_user: root
          login_password: "{{ db_password }}"
      - name: Create user
        mysql_user:
          name: "{{ db_user }}"
          password: "{{ db_password }}"
          priv: '*.*:ALL'
          state: present
          login_user: root
          login_password: "{{ db_password }}"
      - name: configure mysql db to bind to all addresses
        lineinfile:
          path: /etc/mysql/conf.d/mysql.cnf
          regexp: ^bind-address
          line: bind-address = 0.0.0.0
          state: present
      - name: Restart MySQL
        service:
          name: mysql
          state: restarted
 - hosts: web
   become: yes
   tasks:
      - name: Install Apache
        apt:
          name: ['apache2','curl','php8.0','php8.0-cli','php8.0-gd','php8.0-fpm','php8.0-mysql','php8.0-opcache','php8.0-mbstring','php8.0-intl','php8.0-xml','php8.0-zip','php8.0-curl','libapache2-mod-php8.0','libapache2-mod-fcgid','php8.0-pdo-sqlite','php8.0-simplexml']
          state: latest
          update_cache: yes
      - name: Dowload Drupal
        get_url:
         url: https://ftp.drupal.org/files/projects/drupal-9.3.9.zip
         dest: /tmp/
      - name: Create directory drupal
        file:
          path: /var/www/html/drupal
          state: directory
      - name: Extract drupal
        unarchive:
          src: /tmp/drupal-9.3.9.zip
          dest: /var/www/html/drupal
      - name: Change owner
        file:
          path: /var/www/html/
          owner: www-data
          group: www-data
          mode: '0755'
          recurse: yes
      - name: Config for apache
        copy:
          src: /vagrant/drupal.conf
          dest: /etc/apache2/sites-available/
      - name: Enable Apache rewrite module (required for Drupal)
        apache2_module:
          name: rewrite
          state: present
          force: yes
      - name: Symlink Drupal
        file:
          src: /etc/apache2/sites-available/drupal.conf
          dest: /etc/apache2/sites-enabled/drupal.conf
          state: link
      - name: Remove default site
        file:
          path: /etc/apache2/sites-enabled/000-default.conf
          state: absent
      - name: Copy settings.php
        copy:
          src: /vagrant/settings.php
          dest: /var/www/html/drupal/drupal-9.3.9/sites/default/settings.php
      - name: Create settings.php
        copy:
          src: /vagrant/php.ini
          dest: /etc/php/8.0/apache2/php.ini
#      - name: Enable mbstring.so
#        lineinfile:
#          path: /etc/php/8.0/apache2/php.ini
#          regexp: '^;extension=mbstring'
#          insertbefore: '^extension=mbstring'
#          line: extension=mbstring.so
#      - name: Enable mbstring.so
#        lineinfile:
#          path: /var/www/html/drupal/drupal-9.3.9/sites/default/settings.php
#          regexp: '^$databeses = []'
#          insertbefore: '^$databeses = []'
#          line: "#$databases['default']['default'] = [\n#'database' => 'drupal',\n#'username' => 'drupal',\n#'password' => 'drupal',\n#'host' => '10.0.3.10',\n#'port' => '3306',\n#'driver' => 'mysql',\n#'prefix' => '',\n#'collation' => 'utf8_general_ci',\n#];\n"
      - name: Restart apache
        service:
          name: apache2
          state: restarted


   



      
      

     
      
